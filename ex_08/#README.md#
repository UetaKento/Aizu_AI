# EX_08

## Task
Please submit the answer of each exercise before the exercise class of
next week.  Submissions after the deadline will NOT be counted.

Before starting, read the source codes carefully, and try to
understand.  Do not forget (MUST!) to write a brief summary in the
file summary_XX.txt. You may use English or Japanese.

## Summary of this homework 今回の問題の概要
Show that p(a,b) is true using the prolog program given in the teaching
material.

ハンドアウト中のプログラムを作りp(a, b)が真であることを示せ。

## Use `swipl` to run prolog program.

URL: http://www.swi-prolog.org/pldoc/man?section=quickstart


## Notations of prolog

### facts 事実

| predicate 述語                | Prolog               |
|------------------------------|----------------------|
| sofu is the parent of otasan | parent(sofu, otosan) |
| otosan is the parent of taro | parent(otosan, taro) |


Prologではの述語に注目して、事物の関係を表す。




1. すべての関係と事物の名前は小文字で始まる。
    - 例: chieko, parent, makoto
2. 最初に関係の名前(述語)が置かれ、次に括弧で囲まれた中にコンマで区切って事物を書く。
    - 例: ```parent(otosan, taro).```
    - parent ← 関係を表す(2つの引数をもつことのできる述語)
    - otosan, taro ← 事物を表す
3. 事実の最後には’.’ (ピリオド) が置かれる。


### 質問
事実を読み込んで、インタプリタで質問をすることができる。 質問は ?- という記号を前につけて表す。
例) 

```
$ cat parent.pl
parent(sofu, otosan).
parent(otosan, taro).
parent(otosan, miho).

$ sicstus -l parent.pl --noinfo --nologo　　　　　% parent.plを読み込む
| ?- parent(otosan, taro). % 入力 お父さんは太郎の親ですか?
yes % Prolog の回答
| ?- parent(otosan, jim).
no % Prolog の回答
| ?- grandparent(otosan, taro).
! Existence error in user:grandparent/2         % 未定義なのでerror
! procedure user:grandparent/2 does not exist
! goal:  user:grandparent(otosan,taro)
| ?- 
```
Prologは質問に適合する事実があれば"yes" と回答し、なければ"no"と回答する。

```
| ?- parent(otosan, X).
X = taro ? y
yes
```


### 「かつ」と「または」について

「かつ」(論理積)
AND を表す関係を記述したいときには、コンマ(,)で区切って並べて記述する。
```
| ?- parent(X,taro), parent(X,miho).
X = otosan ? y
yes
| ?-　parent(taro, X), parent(X, otosan).
no 
```
「または」(論理和)
OR を表す関係を記述したいときには、セミコロン(;)で区切って並べて記述する。
```
| ?- parent(taro, X); parent(X, otosan).  
X = sofu ? y   % 1項目はfalseだが2項目はマッチ!
yes
```
